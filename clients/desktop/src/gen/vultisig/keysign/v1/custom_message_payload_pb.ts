// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file vultisig/keysign/v1/custom_message_payload.proto (package vultisig.keysign.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type {
  BinaryReadOptions,
  FieldList,
  JsonReadOptions,
  JsonValue,
  PartialMessage,
  PlainMessage,
} from '@bufbuild/protobuf';
import { Message, proto3 } from '@bufbuild/protobuf';

/**
 * @generated from message vultisig.keysign.v1.CustomMessagePayload
 */
export class CustomMessagePayload extends Message<CustomMessagePayload> {
  /**
   * @generated from field: string method = 1;
   */
  method = '';

  /**
   * @generated from field: string message = 2;
   */
  message = '';

  constructor(data?: PartialMessage<CustomMessagePayload>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = 'vultisig.keysign.v1.CustomMessagePayload';
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'method', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 2, name: 'message', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): CustomMessagePayload {
    return new CustomMessagePayload().fromBinary(bytes, options);
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): CustomMessagePayload {
    return new CustomMessagePayload().fromJson(jsonValue, options);
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): CustomMessagePayload {
    return new CustomMessagePayload().fromJsonString(jsonString, options);
  }

  static equals(
    a: CustomMessagePayload | PlainMessage<CustomMessagePayload> | undefined,
    b: CustomMessagePayload | PlainMessage<CustomMessagePayload> | undefined
  ): boolean {
    return proto3.util.equals(CustomMessagePayload, a, b);
  }
}
